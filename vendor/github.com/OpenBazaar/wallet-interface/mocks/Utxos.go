// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"
import wallet "github.com/OpenBazaar/wallet-interface"

// Utxos is an autogenerated mock type for the Utxos type
type Utxos struct {
	mock.Mock
}

// Delete provides a mock function with given fields: utxo
func (_m *Utxos) Delete(utxo wallet.Utxo) error {
	ret := _m.Called(utxo)

	var r0 error
	if rf, ok := ret.Get(0).(func(wallet.Utxo) error); ok {
		r0 = rf(utxo)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetAll provides a mock function with given fields:
func (_m *Utxos) GetAll() ([]wallet.Utxo, error) {
	ret := _m.Called()

	var r0 []wallet.Utxo
	if rf, ok := ret.Get(0).(func() []wallet.Utxo); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]wallet.Utxo)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Put provides a mock function with given fields: utxo
func (_m *Utxos) Put(utxo wallet.Utxo) error {
	ret := _m.Called(utxo)

	var r0 error
	if rf, ok := ret.Get(0).(func(wallet.Utxo) error); ok {
		r0 = rf(utxo)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SetWatchOnly provides a mock function with given fields: utxo
func (_m *Utxos) SetWatchOnly(utxo wallet.Utxo) error {
	ret := _m.Called(utxo)

	var r0 error
	if rf, ok := ret.Get(0).(func(wallet.Utxo) error); ok {
		r0 = rf(utxo)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
